#if !EMUTOS_LIVES_IN_RAM

/* The ROM address depends on the target */
#if defined (MACHINE_AMIGA)
# define ROM_ORIGIN 0x00fc0000
#elif defined (TARGET_CART)
# define ROM_ORIGIN 0x00fa0000
#elif defined (TARGET_192)
# define ROM_ORIGIN 0x00fc0000
#else
# define ROM_ORIGIN 0x00e00000
#endif

/* Always assume there is a lot of ROM space, so the link will always succeed.
 * Then our padding tool will eventually report an overflow, with a better
 * diagnostic message than the linker.
 */
#define ROM_LENGTH 1M /* Maximum size before I/O area */

#endif /* !EMUTOS_LIVES_IN_RAM */

/* Memory regions of a typical Atari computer.
 * Only start addresses matter. Lengths just need to be large enough.
 */
MEMORY
{
    stram : ORIGIN = 0x00000000, LENGTH = 14M
#if !EMUTOS_LIVES_IN_RAM
    rom : ORIGIN = ROM_ORIGIN, LENGTH = ROM_LENGTH
#endif
#if CONF_WITH_STATIC_ALT_RAM
    altram : ORIGIN = STATIC_ALT_RAM_ADDRESS, LENGTH = 1M
#endif
}

/* Region used as read/write memory */
#if CONF_WITH_STATIC_ALT_RAM
REGION_ALIAS("REGION_RAM", altram)
#else
REGION_ALIAS("REGION_RAM", stram)
#endif

/* Regions used by EmuTOS sections */
#if EMUTOS_LIVES_IN_RAM
REGION_ALIAS("REGION_READ_ONLY", REGION_RAM)
#else
REGION_ALIAS("REGION_READ_ONLY", rom)
#endif
REGION_ALIAS("REGION_READ_WRITE", REGION_RAM)