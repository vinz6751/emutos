/*
 * bdos.ld - Custom linker script for EmuTOS's BDOS
 *
 * Copyright (C) 2016-2021 The EmuTOS development team
 *
 * Authors:
 *  VRI   Vincent RiviÃ¨re
 *  VB    Vincent Barrilliot
 *
 * This file is distributed under the GPL, version 2 or at your
 * option any later version.  See doc/license.txt for details.
 */

/* Note: this linker script is preprocessed,
 * to allow #include, #define, #if, etc. */
#include "../include/config.h"

INCLUDE linker/memorymap.ld

/* Create a plain binary file, without any header */
OUTPUT_FORMAT(binary)

SECTIONS
{
	.first_stram :
	{
    	/* System variables are located at fixed addresses */

		#include "bdosvars.ld"
	    . = 0x800; /* Extend sysvars area upto end of supervisor-only RAM */
	    sysvars_end = .;
	} >stram

    /* Include pre-processed version of these files */
    /*INCLUDE ../linker/section_first_stram.ld*/
    INCLUDE ../linker/section_text.ld
    INCLUDE ../linker/section_bss.ld
}


#ifdef ELF_TOOLCHAIN
    /* Our code is compiled with -fleading-underscore, so the references to external
     * libraries will include a leading underscore. However, libgcc was not compiled
     * with that option, so its symbols do not start with a leading underscore. So
     * we need to define leading-underscore aliases to the no-leading-underscore
     * functions in libgcc.
     */
    #define DEFINE_SYMBOL_ALIAS(alias, impl) EXTERN(impl) PROVIDE(alias = impl);
    #define ELF_LIB_REF(symbol) DEFINE_SYMBOL_ALIAS(_##symbol, symbol)
    ELF_LIB_REF(__mulsi3)
    ELF_LIB_REF(__divsi3)
    ELF_LIB_REF(__modsi3)
    ELF_LIB_REF(__udivsi3)
    ELF_LIB_REF(__umodsi3)
#endif
